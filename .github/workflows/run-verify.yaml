name: Verify KEB

on:
  pull_request:
    branches: [ main ]
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
  
permissions:
  contents: read
  pull-requests: read
  checks: write

jobs:
  run-go-tests:
    uses: "./.github/workflows/run-unit-tests-reusable.yaml"

  run-go-linter:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Get changed files
      id: changed-files-specific
      uses: tj-actions/changed-files@v42
      with:
        files: |
          Makefile
 

      #  files_yaml: |
      #    doc:
      #      - '**.md'
      #      - docs/**
      #    test:
      #      - test/**
      #      - '!test/**.md'
      #    src:
      #      - src/**
    - name: Run step if any of the listed files above change
      if: steps.changed-files-specific.outputs.any_modified == 'true'
      env:
              DOC_ALL_CHANGED_FILES: ${{ steps.changed-files-specific.outputs.all_modified_files }}
      run: |
        echo "One or more files listed above has changed."
        echo "List all the files that have changed: $DOC_ALL_CHANGED_FILES"

    - name: Skip step if any of the listed files above dont' change
      if: steps.changed-files-specific.outputs.any_modified == 'false'
      run: |
        echo "Nothing changed"
        exit 0

  #  - name: Run step if doc file(s) change
  #    if: steps.changed-files-yaml.outputs.doc_any_modified == 'true'
  #    env:
  #      DOC_ALL_CHANGED_FILES: ${{ steps.changed-files-yaml.outputs.doc_all_modified_files }}
  #    run: |
  #      echo "One or more doc file(s) has changed."
  #      echo "List all the files that have changed: $DOC_ALL_CHANGED_FILES"

  #  - name: Check changes
   #   run: |
    #    curl -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/MarekMichali/kyma-environment-broker/pulls/${{ github.event.pull_request.number }}/files | jq -r '.[].filename'

    - name: Set up go environment
      uses: actions/setup-go@v4
      with:
        go-version-file: 'go.mod'
        
    - name: Go linter
      uses: golangci/golangci-lint-action@v3
      with:
        version: v1.55.2
        skip-cache: true
        only-new-issues: true
        args: --timeout 2m0s

  run-go-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up go environment
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'

      - name: Run go checks
        run: make checks