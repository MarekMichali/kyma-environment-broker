allowUpdateExpiredInstanceWithContext: "false"
binding:
  bindablePlans: "aws"
  createBindingTimeout: 15s
  enabled: false
  expirationSeconds: 600
  maxBindingsCount: 10
  maxExpirationSeconds: 7200
  minExpirationSeconds: 600
broker:
  defaultRequestRegion: "cf-eu10"
  disableMachineTypeUpdate: "false"
  enableShootAndSeedSameRegion: "false"
  events:
    enabled: true
  operationTimeout: "7h"
  port: "8080"
  profiler:
    memory: false
  statusPort: "8071"
  subaccountMovementEnabled: "false"
  updateCustomResourcesLabelsOnAccountMove: "false"
  useAdditionalOIDCSchema: "false"
cleaning:
  dryRun: true
  enabled: false
cis:
  accounts:
    authURL: "TBD"
    id: "TBD"
    secret: "TBD"
    secretName: "cis-creds-accounts"
    serviceURL: "TBD"
  v1:
    authURL: "TBD"
    eventServiceURL: "TBD"
    id: "TBD"
    secret: "TBD"
    secretName: "cis-creds-v1"
  v2:
    authURL: "TBD"
    eventServiceURL: "TBD"
    id: "TBD"
    jobRetries: 6
    maxRequestRetries: "3"
    rateLimitingInterval: "2s"
    requestInterval: "200ms"
    secret: "TBD"
    secretName: "cis-creds-v2"
common:
cronJobs:
dashboardConfig:
  landscapeURL: "https://dashboard.dev.kyma.cloud.sap"
deployment:
  image:
    pullPolicy: Always
  nodeSelector: { }
  replicaCount: 1
  securityContext:
    runAsUser: 2000
  strategy: { }
deprovisionRetrigger:
  dryRun: true
  enabled: true
  schedule: "0 2 * * *"
disableProcessOperationsInProgress: "false"
disableSapConvergedCloud: false
enableKubeconfigURLLabel: "false"
enablePlans: "azure,gcp,azure_lite,trial,aws"
edp:
  adminURL: "TBD"
  authURL: "TBD"
  disabled: true
  environment: "dev"
  namespace: "kyma-dev"
  required: false
  secret: "TBD"
  secretName: "edp-creds"
freeCleanup:
  dryRun: true
  enabled: true
  expirationPeriod: 2160h # 90 days
  schedule: "0,15,30,45 * * * *"
  testRun: false
  testSubaccountID: "prow-keb-trial-suspension"
freeDocsURL: "https://help.sap.com/docs/"
freeExpirationPeriod: 720h
freemiumWhitelistedGlobalAccountIds: |-
  whitelist:
gardener:
  freemiumProviders: "azure,aws"
  kubeconfigPath: "/gardener/kubeconfig/kubeconfig"
  project: "kyma-dev" # Gardener project connected to SA for HAP credentials lookup
  secretName: "gardener-credentials"
  shootDomain: "kyma-dev.shoot.canary.k8s-hana.ondemand.com"
global:
  database:
    cloudsqlproxy:
      enabled: false
      workloadIdentity:
        enabled: false
    embedded:
      enabled: true
    managedGCP:
      encryptionSecretName: "kcp-storage-client-secret"
      instanceConnectionName: ""
  images:
    cloudsql_proxy:
      repository: eu.gcr.io/sap-ti-dx-kyma-mps-dev/images/cloudsql-proxy
      tag: 2.11.3-sap
    container_registry:
      path: europe-docker.pkg.dev/kyma-project/prod
    kyma_environment_broker:
      dir:
      version: "1.19.0"
    kyma_environment_broker_schema_migrator:
      dir:
      version: 1.19.0
    kyma_environment_deprovision_retrigger_job:
      dir:
      version: "1.19.0"
    kyma_environment_expirator_job:
      dir:
      version: "1.19.0"
    kyma_environment_globalaccounts:
      dir:
      version: "1.19.0"
    kyma_environment_runtime_reconciler:
      dir:
      version: "1.19.0"
    kyma_environment_service_binding_cleanup_job:
      dir:
      version: 1.19.0
    kyma_environment_subaccount_sync:
      dir:
      version: "1.19.0"
    kyma_environment_trial_cleanup_job:
      dir:
      version: "1.19.0"
    kyma_environments_subaccount_cleanup_job:
      dir:
      version: "1.19.0"
  ingress:
    domainName: localhost
  istio:
    gateway: "kyma-system/kyma-gateway"
    proxy:
      port: 15020
  kyma_environment_broker:
    serviceAccountName: "kcp-kyma-environment-broker"
  secrets:
    enabled: true
    mechanism: vso
    vso:
      mount: kcp-dev
      namespace: kyma
      refreshAfter: 30s
globalaccounts:
  dryRun: true
  enabled: false
  name: "kyma-environment-globalaccounts"
hap:
  rule:
    - aws                             # pool: hyperscalerType: aws
    - aws(PR=cf-eu11) -> EU           # pool: hyperscalerType: aws; euAccess: true
    - azure                           # pool: hyperscalerType: azure
    - azure(PR=cf-ch20) -> EU         # pool: hyperscalerType: azure; euAccess: true
    - gcp                             # pool: hyperscalerType: gcp
    - gcp(PR=cf-sa30) -> PR           # pool: hyperscalerType: gcp_cf-sa30
    - trial -> S                      # pool: hyperscalerType: azure; shared: true - TRIAL POOL
    # pool: hyperscalerType: aws; shared: true - TRIAL POOL
    - sap-converged-cloud(HR=*) -> S  # pool: hyperscalerType: openstack_<HYPERSCALER_REGION>; shared: true
    - azure_lite                      # pool: hyperscalerType: azure
    - preview                         # pool: hyperscalerType: aws
    - free                            # pool: hyperscalerType: aws
    # pool: hyperscalerType: azure
imagePullSecret: ""
includeAdditionalParamsInSchema: "false"
infrastructureManager:
  controlPlaneFailureTolerance: ""
  defaultShootPurpose: "development"
  defaultTrialProvider: "Azure" # Azure, AWS
  enableIngressFiltering: "false"
  ingressFilteringPlans: "azure,gcp,aws"
  kubernetesVersion: "1.16.9"
  machineImage: ""
  machineImageVersion: ""
  multiZoneCluster: "false"
  useSmallerMachineTypes: "false"
kymaResourceDeletionTimeout: 30s
kebClient:
  scope: "broker:write cld:read"
kubeconfig:
  allowOrigins: "*"
lifecycleManager:
  disabled: "false"
metricsv2:
  enabled: false
  operationResultFinishedOperationRetentionPeriod: 3h
  operationResultPoolingInterval: 1m
  operationResultRetentionPeriod: 1h
  operationStatsPoolingInterval: 1m
migratorJobs:
  argosync:
    enabled: false
    syncwave: "0"
  enabled: true
  helmhook:
    enabled: true
    weight: "1"
multipleContexts: false
notification:
  url: "TBD"
oidc:
  groups:
    admin: runtimeAdmin
    operator: runtimeOperator
    orchestrations: orchestrationsAdmin
    viewer: runtimeViewer
  issuer: https://kymatest.accounts400.ondemand.com
  keysURL: https://kymatest.accounts400.ondemand.com/oauth2/certs
onlyOneFreePerGA: "false"
onlySingleTrialPerGA: "true"
osbUpdateProcessingEnabled: "true"
regionsSupportingMachine: |-
  c2d-highcpu:
    - europe-west3
    - asia-south1
    - us-central1
runtimeAllowedPrincipals: |-
  - cluster.local/ns/kcp-system/sa/kcp-kyma-metrics-collector
runtimeConfiguration: |-
  default: |-
    kyma-template: |-
      apiVersion: operator.kyma-project.io/v1beta2
      kind: Kyma
      metadata:
        labels:
          "operator.kyma-project.io/managed-by": "lifecycle-manager"
        name: tbd
        namespace: kcp-system
      spec:
        channel: fast
        modules: []
    additional-components: []
runtimeReconciler:
  dryRun: true
  enabled: false
  jobEnabled: false
  jobInterval: 1440
  jobReconciliationDelay: 1s
  metricsPort: 8081
sapConvergedCloudPlanRegionMappings: |-
  cf-eu20-staging:
    - eu-de-1
    - eu-de-2
  cf-eu21-staging:
    - eu-de-3
    - eu-de-4
service:
  port: 80
  type: ClusterIP
serviceAccount:
  annotations: { }
serviceBindingCleanup:
  dryRun: true
  enabled: false
  requestRetries: 2
  requestTimeout: 2s
  schedule: "0 2,14 * * *"
serviceMonitor:
  enabled: false
  interval: &scrapeInterval 30s
  scrapeTimeout: &scrapeTimeout 10s
showFreeExpirationInfo: "false"
showTrialExpirationInfo: "false"
skrDNSProvidersValues: |-
  providers: []
skrOIDCDefaultValues: |-
  clientID: "9bd05ed7-a930-44e6-8c79-e6defeb7dec9"
  groupsClaim: "groups"
  groupsPrefix: "-"
  issuerURL: "https://kymatest.accounts400.ondemand.com"
  signingAlgs: [ "RS256" ]
  usernameClaim: "sub"
  usernamePrefix: "-"
stepTimeouts:
  checkRuntimeResourceCreate: 60m
  checkRuntimeResourceDeletion: 60m
  checkRuntimeResourceUpdate: 180m
subaccountCleanup:
  enabled: "false"
  nameV1: "kcp-subaccount-cleaner-v1.0"
  nameV2: "kcp-subaccount-cleaner-v2.0"
  schedule: "0 1 * * *"
subaccountSync:
  accountSyncInterval: 24h
  alwaysSubaccountFromDatabase: false
  cisRateLimits:
    accounts:
      maxRequestsPerInterval: 5
      rateLimitingInterval: 2s
    events:
      maxRequestsPerInterval: 5
      rateLimitingInterval: 2s
  enabled: true
  eventsWindowInterval: 15m
  eventsWindowSize: 20m
  logLevel: info
  metricsPort: 8081
  name: "subaccount-sync"
  queueSleepInterval: 30s
  storageSyncInterval: 5m
  updateResources: false
swagger:
  virtualService:
    enabled: true
testConfig:
  kebDeployment:
    useAnnotations: false
    weight: "2"
trialCleanup:
  dryRun: true
  enabled: true
  expirationPeriod: 336h
  schedule: "15 1 * * *"
  testRun: false
  testSubaccountID: "prow-keb-trial-suspension"
trialDocsURL: "https://help.sap.com/docs/"
trialRegionsMapping: |-
  cf-eu10: europe
  cf-us10: us
  cf-ap21: asia
vmscrapes:
  enabled: true
  interval: *scrapeInterval
  scrapeTimeout: *scrapeTimeout
vsoSecrets:
  secrets:
    cis-accounts:
      labels: >-
        {{ template "kyma-env-broker.labels" . }}
      path: cis
      restartTargets:
        - kind: Deployment
          name: "{{- .Values.subaccountSync.name -}}"
      secretName: "{{ .Values.cis.accounts.secretName | required \"please specify .Values.cis.accounts.secretName\"}}"
      templating:
        data:
          id: {}
          secret: {}
        enabled: true
        keys:
          id: account_id
          secret: account_secret
    cis-v1:
      labels: >-
        {{ template "kyma-env-broker.labels" . }}
      path: cis
      secretName: "{{ .Values.cis.v1.secretName | required \"please specify .Values.cis.v1.secretName\"}}"
      templating:
        data:
          id: {}
          secret: {}
        enabled: true
        keys:
          id: v1_id
          secret: v1_secret
    cis-v2:
      labels: >-
        {{ template "kyma-env-broker.labels" . }}
      path: cis
      restartTargets:
        - kind: Deployment
          name: "{{- .Values.subaccountSync.name -}}"
      secretName: "{{ .Values.cis.v2.secretName | required \"please specify .Values.cis.v2.secretName\"}}"
      templating:
        data:
          id: {}
          secret: {}
        enabled: true
        keys:
          id: v2_id
          secret: v2_secret
    edp:
      labels: >-
        {{ template "kyma-env-broker.labels" . }}
      path: edp
      restartTargets:
        - kind: Deployment
          name: >-
            {{- template "kyma-env-broker.fullname" . -}}
      secretName: "{{ .Values.edp.secretName }}"
      templating:
        data:
          secret: {}
        enabled: true
        keys:
          secret: keb_edp_secret
zoneMapping: false
